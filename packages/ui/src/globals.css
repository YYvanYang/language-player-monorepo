/* packages/ui/src/globals.css */

/* 1. Import Tailwind FIRST */
@import "tailwindcss";

/* 2. Define Custom Variants (e.g., for dark mode) */
@custom-variant dark (&:where(.dark, .dark *));

/* 3. Import the theme definitions and base styles */
@import "./theme.css";

/*
   4. Optional: Define custom, VARIANT-AWARE component base styles or utility classes
      using the `@utility` directive. This replaces the common v3 practice of using
      `@layer components` or `@layer utilities` for classes intended to work with
      Tailwind variants (hover:, focus:, lg:, etc.).
      Example:
      @utility btn-primary {
        @apply px-4 py-2 rounded bg-primary text-primary-foreground font-semibold;
        &:hover {
           @apply bg-primary/90; // Standard CSS pseudo-class within @utility
        }
      }
      // Usage in HTML: <button class="btn-primary hover:opacity-80 lg:btn-primary">...</button>
      // Note: Tailwind variants like `hover:` can still be applied externally to the base defined by @utility.
*/

/*
   5. Optional: Add standard CSS rules to Tailwind's layers if needed, but NOT
      for defining variant-aware utility-like classes (use @utility for that).
      This is less common in v4 for shared styles.
      Example (Rarely needed here):
      @layer components {
        // Styles for a very specific, non-utility-like component part
        .special-widget-container {
          box-shadow: none; // Override some default perhaps
        }
      }
*/